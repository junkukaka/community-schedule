<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aspn.community.schedule.report.ReportServiceMapper">
    <insert id="insertBatchMemberCount" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO batch_member_count (
            base_month,
            member_id,
            wiki_cnt,
            wiki_his_cnt,
            community_cnt,
            comment_cnt,
            like_cnt,
            be_liked,
            update_time
        )
        SELECT
            (
                SELECT
                    DATE_FORMAT(
                            date_add(now(), INTERVAL - 1 MONTH),
                            '%Y-%c'
                        )
                FROM
                    DUAL
            ) AS base_month,
            m.id,
            IFNULL(w.wiki_cnt, 0) AS wiki_cnt,
            IFNULL(wh.wiki_his_cnt, 0) AS wiki_his_cnt,
            IFNULL(c.community_cnt, 0) AS community_cnt,
            IFNULL(cc.comment_cnt, 0) AS comment_cnt,
            IFNULL(l.like_cnt, 0) AS like_cnt,
            IFNULL(bl.be_liked, 0) AS be_liked,
            SYSDATE() AS update_time
        FROM
            member m
                LEFT JOIN (
                SELECT
                    m.id,
                    count(1) AS wiki_cnt
                FROM
                    member m,
                    wiki w
                WHERE
                    m.id = w.register_id
                  AND w.his_id IS NOT NULL
                  AND w.update_time <![CDATA[ >= ]]>(
                    SELECT
                        DATE_ADD(
                                DATE_ADD(
                                        curdate(),
                                        INTERVAL - DAY (curdate()) + 1 DAY
				),
                                INTERVAL - 1 MONTH
			)
                )
                  AND w.update_time <![CDATA[ <= ]]> (
                    SELECT
                        last_day(
                                date_add(now(), INTERVAL - 1 MONTH)
                            )
                )
                GROUP BY
                    m.id
            ) w ON m.id = w.id
                LEFT JOIN (
                SELECT
                    m.id,
                    count(1) AS wiki_his_cnt
                FROM
                    wiki_his w,
                    member m
                WHERE
                    m.id = w.member_id
                  AND w.update_time <![CDATA[ >= ]]> (
                    SELECT
                        DATE_ADD(
                                DATE_ADD(
                                        curdate(),
                                        INTERVAL - DAY (curdate()) + 1 DAY
				),
                                INTERVAL - 1 MONTH
			)
                )
                  AND w.update_time <![CDATA[ <= ]]> (
                    SELECT
                        last_day(
                                date_add(now(), INTERVAL - 1 MONTH)
                            )
                )
                  AND w.his_yn = 1
                GROUP BY
                    m.id
            ) wh ON m.id = wh.id
                LEFT JOIN (
                SELECT
                    m.id,
                    count(1) community_cnt
                FROM
                    community c,
                    member m
                WHERE
                    c.member_id = m.id
                  AND c.register_time <![CDATA[ >= ]]>(
                    SELECT
                        DATE_ADD(
                                DATE_ADD(
                                        curdate(),
                                        INTERVAL - DAY (curdate()) + 1 DAY
				),
                                INTERVAL - 1 MONTH
			)
                )
                  AND c.register_time <![CDATA[ <= ]]> (
                    SELECT
                        last_day(
                                date_add(now(), INTERVAL - 1 MONTH)
                            )
                )
                GROUP BY
                    m.id
            ) c ON m.id = c.id
                LEFT JOIN (
                SELECT
                    m.id,
                    count(1) AS comment_cnt
                FROM
                    member m,
                    com_comment c
                WHERE
                    m.id = c.member_id
                  AND c.register_time <![CDATA[ >= ]]>(
                    SELECT
                        DATE_ADD(
                                DATE_ADD(
                                        curdate(),
                                        INTERVAL - DAY (curdate()) + 1 DAY
				),
                                INTERVAL - 1 MONTH
			)
                )
                  AND c.register_time <![CDATA[ <= ]]> (
                    SELECT
                        last_day(
                                date_add(now(), INTERVAL - 1 MONTH)
                            )
                )
                GROUP BY
                    m.id
            ) cc ON m.id = cc.id
                LEFT JOIN (
                SELECT
                    m.id,
                    count(1) AS like_cnt
                FROM
                    com_like c,
                    member m
                WHERE
                    c.member_id = m.id
                  AND c.register_time <![CDATA[ >= ]]>(
                    SELECT
                        DATE_ADD(
                                DATE_ADD(
                                        curdate(),
                                        INTERVAL - DAY (curdate()) + 1 DAY
				),
                                INTERVAL - 1 MONTH
			)
                )
                  AND c.register_time <![CDATA[ <= ]]> (
                    SELECT
                        last_day(
                                date_add(now(), INTERVAL - 1 MONTH)
                            )
                )
                GROUP BY
                    m.id
            ) l ON m.id = l.id
                LEFT JOIN (
                SELECT
                    m.id,
                    sum(l.be_liked) AS be_liked
                FROM
                    community c,
                    (
                        SELECT
                            l.community_id,
                            count(1) be_liked
                        FROM
                            com_like l,
                            community c
                        WHERE
                            l.community_id = c.id
                          AND l.register_time <![CDATA[ >= ]]>(
                            SELECT
                                DATE_ADD(
                                        DATE_ADD(
                                                curdate(),
                                                INTERVAL - DAY (curdate()) + 1 DAY
						),
                                        INTERVAL - 1 MONTH
					)
                        )
                          AND l.register_time <![CDATA[ <= ]]> (
                            SELECT
                                last_day(
                                        date_add(now(), INTERVAL - 1 MONTH)
                                    )
                        )
                        GROUP BY
                            l.community_id
                    ) l,
                    member m
                WHERE
                    c.id = l.community_id
                  AND m.id = c.member_id
                GROUP BY
                    m.id
            ) bl ON m.id = bl.id
    </insert>

</mapper>